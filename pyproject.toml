[project]
name = "health-ai-framework"
version = "0.1.0"
description = "Framework to create a custom AI agent."
authors = [{ name = "Preet Vadaliya", email = "preetvadaliya@gmail.com" }]
requires-python = "==3.10.*"
readme = "README.md"
license = { text = "MIT" }

dependencies = [
    "python-dotenv>=1.0.1",
    "python-youtube>=0.9.4",
    "bs4>=0.0.2",
    "jupyter>=1.0.0",
    "google-cloud>=0.34.0",
    "google>=3.0.0",
    "google-cloud-speech>=2.26.0",
    "pocketsphinx>=5.0.3",
    "SpeechRecognition>=3.10.4",
    "pydub>=0.25.1",
    "ffmpeg>=1.4",
    "sox>=1.5.0",
    "beautifulsoup4>=4.12.3",
    "wave>=0.0.2",
    "vosk>=0.3.45",
    "paperscraper>=0.2.11",
    "pypdf>=4.2.0",
    "biopython>=1.83",
    "pymongo>=4.7.2",
    "selenium>=4.21.0",
    "webdriver-manager>=4.0.1",
    "openai>=1.30.1",
    "langchain>=0.2.0",
    "tiktoken>=0.7.0",
    "langchain-community>=0.2.0",
    "chromadb>=0.5.0",
    "vertexai>=1.49.0",
    "langchain-google-genai>=1.0.4",
    "sentence-transformers>=2.7.0",
    "requests>=2.31.0",
]

[tool.pdm.dev-dependencies]
linting = ["ruff>=0.4.2", "pre-commit>=3.7.0"]

[tool.pdm.scripts]
post_install="sh -c '[ \"$IS_IN_DOCKER\" = \"true\" ] && echo \"Docker: skipping pre-commit\" || pre-commit install'"
lint = "ruff check"
format = "ruff format"
build-config = "python -m src.backend.Config.main"
run-orchestrator = "python -m src.backend.Orchestrator.main"
scrape-allrecipes = "python -m src.backend.Scrapers.AllRecipes.main"
scrape-podcast = "python -m src.backend.Scrapers.PodCast.main"
scrape-pubmed = "python -m src.backend.Scrapers.PubMed.main"
scrape-youtube = "python -m src.backend.Scrapers.YouTube.main"
scrape-archive = "python -m src.backend.Scrapers.Archive.main"
scrape-nutritionfacts = "python -m src.backend.Scrapers.Nutritionfacts.main"

[tool.pdm]
distribution = false
